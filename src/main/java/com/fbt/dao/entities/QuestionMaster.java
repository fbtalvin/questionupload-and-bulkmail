package com.fbt.dao.entities;

// Generated Mar 31, 2015 1:18:31 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * QuestionMaster generated by hbm2java
 */
@Entity
@Table(name = "exam_question_master", catalog = "talentex_sme")
public class QuestionMaster implements java.io.Serializable {

	private Integer id;
	private ChapterMaster chapterMaster;
	private CourseMaster courseMaster;
	private int mark;
	private int questionType;
	private String questionImage;
	private String questionText;
	private Integer questionLevel;
	private Set<QuestionOptionMapping> questionOptionMappings = new HashSet<QuestionOptionMapping>();

	public QuestionMaster() {
	}

	public QuestionMaster(ChapterMaster chapterMaster,
			CourseMaster courseMaster, int mark, int questionType,
			String questionText) {
		this.chapterMaster = chapterMaster;
		this.courseMaster = courseMaster;
		this.mark = mark;
		this.questionType = questionType;
		this.questionText = questionText;
	}

	public QuestionMaster(ChapterMaster chapterMaster,
			CourseMaster courseMaster, int mark, int questionType,
			String questionImage, String questionText, Integer questionLevel,
			Set<QuestionOptionMapping> questionOptionMappings) {
		this.chapterMaster = chapterMaster;
		this.courseMaster = courseMaster;
		this.mark = mark;
		this.questionType = questionType;
		this.questionImage = questionImage;
		this.questionText = questionText;
		this.questionLevel = questionLevel;
		this.questionOptionMappings = questionOptionMappings;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "chapter_id", nullable = false)
	public ChapterMaster getChapterMaster() {
		return this.chapterMaster;
	}

	public void setChapterMaster(ChapterMaster chapterMaster) {
		this.chapterMaster = chapterMaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "course_id", nullable = false)
	public CourseMaster getCourseMaster() {
		return this.courseMaster;
	}

	public void setCourseMaster(CourseMaster courseMaster) {
		this.courseMaster = courseMaster;
	}

	@Column(name = "mark", nullable = false)
	public int getMark() {
		return this.mark;
	}

	public void setMark(int mark) {
		this.mark = mark;
	}

	@Column(name = "question_type", nullable = false)
	public int getQuestionType() {
		return this.questionType;
	}

	public void setQuestionType(int questionType) {
		this.questionType = questionType;
	}

	@Column(name = "question_image")
	public String getQuestionImage() {
		return this.questionImage;
	}

	public void setQuestionImage(String questionImage) {
		this.questionImage = questionImage;
	}

	@Column(name = "question_text", nullable = false)
	public String getQuestionText() {
		return this.questionText;
	}

	public void setQuestionText(String questionText) {
		this.questionText = questionText;
	}

	@Column(name = "level")
	public Integer getQuestionLevel() {
		return this.questionLevel;
	}

	public void setQuestionLevel(Integer questionLevel) {
		this.questionLevel = questionLevel;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "questionMaster")
	public Set<QuestionOptionMapping> getQuestionOptionMappings() {
		return this.questionOptionMappings;
	}

	public void setQuestionOptionMappings(Set<QuestionOptionMapping> questionOptionMappings) {
		this.questionOptionMappings = questionOptionMappings;
	}

}
